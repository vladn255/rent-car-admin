{"version":3,"sources":["style-theme.ts","const.ts","components/text-input/text-input.tsx","components/button/button.tsx","services/api.ts","store/slices/auth-slice/api-actions.ts","store/slices/auth-slice/auth-slice.ts","components/login-form/login-form.tsx","img/icons/logo-Icon.svg","components/login-page/styles.ts","components/login-page/login-page.tsx","components/not-found/not-found.tsx","components/private-route/private-route.tsx","components/main-page/main-page.tsx","components/app/app.tsx","store/store.ts","index.tsx"],"names":["theme","createTheme","palette","text","primary","breakpoints","values","xs","sm","md","lg","xl","props","MuiButtonBase","disableRipple","AuthCredentials","RoutePath","TextInput","name","type","label","placeholder","value","auotofocus","isError","errorText","changeHandler","blurHandler","className","htmlFor","id","autoFocus","onChange","onBlur","Button","title","addClasses","isDisabled","clickHandler","disabled","onClick","URL","APPLICATION_ID","basicCode","btoa","getAuthorization","accessToken","api","axios","create","headers","baseURL","timeout","onSuccess","response","onFail","err","interceptors","use","createAPI","fetchAuthorization","post","JSON","stringify","username","password","then","data","catch","console","log","authorize","createAsyncThunk","a","access_token","authSlice","createSlice","initialState","authorized","loading","loadingError","reducers","setAuthorized","state","action","payload","setLoadingErrorStatus","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","EmailProps","PasswordProps","LoginSchema","yup","shape","email","required","LoginForm","history","useHistory","dispatch","useDispatch","loadingErrorStatus","useSelector","auth","authorizationStatus","useEffect","submitHandler","initialValues","validateOnBlur","onSubmit","validationSchema","errors","touched","handleChange","handleBlur","isValid","dirty","push","useContainerStyles","makeStyles","createStyles","root","marginTop","padding","maxWidthLg","maxWidth","useBoxStyles","display","justifyContent","alignItems","marginBottom","usePaperStyles","rounded","borderRadius","useTextStyles","body1","fontSize","lineHeight","useIconStyles","width","height","marginRight","LoginPage","paperRoot","containerRoot","boxRoot","iconRoot","Container","component","Box","Icon","src","logoIcon","alt","Typography","align","Paper","NotFound","to","PrivateRoute","render","path","exact","routeProps","MainPage","App","CssBaseline","ThemeProvider","store","configureStore","reducer","authReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fe8198a.chunk.js","sourcesContent":["import { createTheme } from '@material-ui/core';\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        text: {\r\n            primary: \"#3d5170\"\r\n        }\r\n    },\r\n    breakpoints: {\r\n        values: {\r\n            xs: 0,\r\n            sm: 320,\r\n            md: 768,\r\n            lg: 1024,\r\n            xl: 1440\r\n        }\r\n    },\r\n    props: {\r\n        MuiButtonBase: {\r\n            disableRipple: true,\r\n        }\r\n    }\r\n})\r\n\r\nexport default theme","const AuthCredentials = {\r\n    name: \"intern\",\r\n    password: \"intern-S!\"\r\n}\r\n\r\nconst RoutePath = {\r\n    HOME: \"/\",\r\n    MAIN: \"/admin\"\r\n}\r\n\r\nexport {\r\n    AuthCredentials,\r\n    RoutePath\r\n}","import React from \"react\"\r\n\r\nimport ITextInputProps from \"./types\";\r\n\r\nconst TextInput: React.FC<ITextInputProps> = ({ name, type, label, placeholder, value = '', auotofocus = false, isError = '', errorText = '', changeHandler, blurHandler }: ITextInputProps) => {\r\n\r\n    return (\r\n        <div className=\"text-input\">\r\n            <label className=\"text-input__label\" htmlFor={name}>{label}</label>\r\n            <input\r\n                className={`text-input__input ${isError ? 'text-input__input--error' : ''}`}\r\n                type={type}\r\n                name={name}\r\n                id={name}\r\n                value={value}\r\n                placeholder={placeholder}\r\n                autoFocus={auotofocus}\r\n                onChange={changeHandler}\r\n                onBlur={blurHandler}\r\n            />\r\n            {isError && <span className=\"text-input__error-text\">{errorText}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextInput","import React from \"react\"\r\n\r\nimport { IButtonProps } from \"./types\"\r\n\r\nconst Button: React.FC<IButtonProps> = ({ title, type, addClasses = '', isDisabled = false, clickHandler }) => {\r\n    return (\r\n        <button\r\n            type={type}\r\n            className={`${addClasses} button`}\r\n            disabled={isDisabled}\r\n            onClick={clickHandler}\r\n        >{title}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import axios from \"axios\";\r\n\r\nconst URL = `https://api-factory.simbirsoft1.com/api`;\r\nconst REQUEST_TIMEOUT = 20000;\r\nconst APPLICATION_ID = '5e25c641099b810b946c5d5b'\r\nconst RANDOM_STRING = 'u5taw48o'\r\nconst SECRET = '4cbcea96de';\r\nconst basicCode = btoa(`${RANDOM_STRING}:${SECRET}`);\r\n\r\nconst getAuthorization = (accessToken: string | null = null): string => {\r\n    return accessToken\r\n        ? `Bearer ${accessToken}`\r\n        : `Basic ${basicCode}`\r\n}\r\n\r\nexport const createAPI = (accessToken = null) => {\r\n    const api = axios.create({\r\n        headers: {\r\n            'X-Api-Factory-Application-Id': APPLICATION_ID,\r\n            'Authorization': getAuthorization(accessToken),\r\n            'Content-Type': 'application/json'\r\n        },\r\n        baseURL: URL,\r\n        timeout: REQUEST_TIMEOUT\r\n    });\r\n\r\n    const onSuccess = (response: any) => response;\r\n\r\n    const onFail = (err: string) => {\r\n        throw err;\r\n    };\r\n\r\n    api.interceptors.response.use(onSuccess, onFail);\r\n    return api;\r\n};","import { createAPI } from \"../../../services/api\";\r\nimport { AuthCredentials } from \"../../../const\";\r\n\r\nconst getLoginCredentials = () => {\r\n    return JSON.stringify({\r\n        username: AuthCredentials.name,\r\n        password: AuthCredentials.password\r\n    })\r\n}\r\n\r\nconst api = createAPI()\r\n\r\nconst fetchAuthorization = () => {\r\n    return api.post('/auth/login', getLoginCredentials())\r\n        .then((response) => {\r\n            return response.data\r\n        })\r\n        .catch((err) => console.log(err))\r\n}\r\n\r\nexport {\r\n    fetchAuthorization\r\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { IAuthState } from \"./types\";\r\n\r\nimport { fetchAuthorization } from \"./api-actions\";\r\n\r\nconst authorize = createAsyncThunk(\r\n    'auth/fetchAuthorization',\r\n    async () => {\r\n        const response = await fetchAuthorization()\r\n        return response.access_token\r\n    }\r\n)\r\n\r\nconst initialState: IAuthState = {\r\n    authorized: false,\r\n    accessToken: null,\r\n    loading: 'idle',\r\n    loadingError: false\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        setAuthorized: (state, action: PayloadAction<boolean>) => {\r\n            state.authorized = action.payload\r\n        },\r\n        setLoadingErrorStatus: (state, action: PayloadAction<boolean>) => {\r\n            state.loadingError = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(authorize.pending, (state) => {\r\n            state.loading = 'pending'\r\n        })\r\n        builder.addCase(authorize.fulfilled, (state, action) => {\r\n            state.loading = 'idle'\r\n            state.authorized = true\r\n            state.accessToken = action.payload\r\n        })\r\n        builder.addCase(authorize.rejected, (state) => {\r\n            state.loadingError = true\r\n        })\r\n    }\r\n})\r\n\r\nexport const { setAuthorized, setLoadingErrorStatus } = authSlice.actions\r\nexport default authSlice.reducer\r\nexport { authorize }","import { Formik } from \"formik\"\r\nimport React, { useEffect } from \"react\"\r\nimport * as yup from 'yup'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\n\r\nimport { ILoginFormValues, ILoginInputProps } from \"./types\"\r\nimport { RootState } from '../../store/store'\r\n\r\nimport TextInput from \"../text-input/text-input\"\r\nimport Button from \"../button/button\"\r\nimport { authorize } from \"../../store/slices/auth-slice/auth-slice\"\r\nimport { RoutePath } from \"../../const\"\r\n\r\n\r\nconst EmailProps: ILoginInputProps = {\r\n    name: 'email',\r\n    type: 'email',\r\n    label: 'Почта',\r\n    placeholder: 'Введите свой e-mail',\r\n    errorText: 'Введите e-mail',\r\n    autofocus: true\r\n}\r\n\r\nconst PasswordProps: ILoginInputProps = {\r\n    name: 'password',\r\n    type: 'password',\r\n    label: 'Пароль',\r\n    placeholder: 'Введите свой пароль',\r\n    errorText: 'Введите пароль'\r\n}\r\n\r\nconst LoginSchema = yup.object().shape({\r\n    email: yup.string().email().required(\"Введите e-mail\"),\r\n    password: yup.string().required(\"Введите пароль\")\r\n})\r\n\r\n\r\nconst LoginForm: React.FC = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const loadingErrorStatus = useSelector((state: RootState) => state.auth.loadingError)\r\n    const authorizationStatus = useSelector((state: RootState) => state.auth.authorized)\r\n\r\n    useEffect(() => {\r\n        // do nothing\r\n    }, [loadingErrorStatus, authorizationStatus])\r\n\r\n    const initialValues: ILoginFormValues = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        dispatch(authorize())\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        history.push(RoutePath.MAIN)\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validateOnBlur\r\n            onSubmit={submitHandler}\r\n            validationSchema={LoginSchema}\r\n        >\r\n            {({ values, errors, touched, handleChange, handleBlur, isValid, dirty }) => (\r\n                <fieldset className=\"login-form\">\r\n                    <legend className=\"login-form__legend\">Вход</legend>\r\n                    <TextInput\r\n                        name={EmailProps.name}\r\n                        type={EmailProps.type}\r\n                        label={EmailProps.label}\r\n                        placeholder={EmailProps.placeholder}\r\n                        value={values.email}\r\n                        auotofocus={EmailProps.autofocus}\r\n                        isError={touched.email && errors.email}\r\n                        errorText={EmailProps.errorText}\r\n                        changeHandler={handleChange}\r\n                        blurHandler={handleBlur}\r\n                    />\r\n                    <TextInput\r\n                        name={PasswordProps.name}\r\n                        type={PasswordProps.type}\r\n                        label={PasswordProps.label}\r\n                        placeholder={PasswordProps.placeholder}\r\n                        value={values.password}\r\n                        isError={touched.password && errors.password}\r\n                        errorText={PasswordProps.errorText}\r\n                        changeHandler={handleChange}\r\n                        blurHandler={handleBlur}\r\n                    />\r\n                    <div className=\"login-form__buttons-wrapper\">\r\n                        <Button\r\n                            title='Запросить доступ'\r\n                            type=\"submit\"\r\n                            addClasses=\"login-form__access-button\"\r\n                            isDisabled={authorizationStatus}\r\n                            clickHandler={() => submitHandler()}\r\n                        />\r\n\r\n                        <Button\r\n                            title='Войти'\r\n                            type='button'\r\n                            addClasses='login-form__submit-button'\r\n                            isDisabled={!isValid || !dirty || !authorizationStatus}\r\n                            clickHandler={() => clickHandler()}\r\n                        />\r\n                    </div>\r\n                    {loadingErrorStatus && <p className=\"login-form__error\">Ошибка авторизации</p>}\r\n                </fieldset>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default LoginForm","export default __webpack_public_path__ + \"static/media/logo-Icon.42a15795.svg\";","import { makeStyles, createStyles } from \"@material-ui/core/styles\"\r\n\r\n\r\nconst useContainerStyles = makeStyles(() => createStyles({\r\n    root: {\r\n        marginTop: \"20%\",\r\n        padding: \"0\"\r\n    },\r\n    maxWidthLg: {\r\n        maxWidth: \"376px\"\r\n    }\r\n}))\r\n\r\nconst useBoxStyles = makeStyles(() => createStyles({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"16px\"\r\n    },\r\n}))\r\n\r\nconst usePaperStyles = makeStyles(() => createStyles({\r\n    root: {\r\n        padding: \"20px 18px\"\r\n    },\r\n    rounded: {\r\n        borderRadius: \"9px\"\r\n    }\r\n}))\r\n\r\nconst useTextStyles = makeStyles(() => createStyles({\r\n    body1: {\r\n        fontSize: \"24px\",\r\n        lineHeight: \"28px\"\r\n    }\r\n}))\r\n\r\nconst useIconStyles = makeStyles(() => createStyles({\r\n    root: {\r\n        width: \"45px\",\r\n        height: \"45px\",\r\n        marginRight: \"11px\"\r\n    }\r\n}))\r\n\r\n\r\nexport {\r\n    useContainerStyles,\r\n    useBoxStyles,\r\n    usePaperStyles,\r\n    useTextStyles,\r\n    useIconStyles\r\n}","import React from \"react\"\r\nimport { Container, Paper, Box, Icon, Typography } from \"@material-ui/core\"\r\nimport LoginForm from \"../login-form/login-form\"\r\nimport logoIcon from \"../../img/icons/logo-Icon.svg\"\r\n\r\nimport { useBoxStyles, useContainerStyles, usePaperStyles, useTextStyles, useIconStyles } from './styles'\r\n\r\n\r\nconst LoginPage: React.FC = () => {\r\n    const { root: paperRoot, rounded } = usePaperStyles()\r\n    const { root: containerRoot, maxWidthLg } = useContainerStyles()\r\n    const { body1 } = useTextStyles()\r\n    const { root: boxRoot } = useBoxStyles()\r\n    const { root: iconRoot } = useIconStyles()\r\n\r\n    return (\r\n        <Container component=\"main\" className={`${containerRoot} ${maxWidthLg}`}>\r\n            <Box className={`${boxRoot}`}>\r\n                <Icon component=\"div\" className={`${iconRoot}`}>\r\n                    <img src={logoIcon} height={45} width={45} alt=\"Logo icon\" />\r\n                </Icon>\r\n                <Typography\r\n                    component=\"h1\"\r\n                    align=\"center\"\r\n                    className={`${body1}`}\r\n                >Need for drive</Typography>\r\n            </Box>\r\n            <Paper className={`${paperRoot} ${rounded}`}>\r\n                <LoginForm />\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginPage","import {Link} from 'react-router-dom';\r\nimport {RoutePath} from \"../../const\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>404 NotFound</h1>\r\n      <Link to={RoutePath.MAIN}>\r\n        <span>Go to main page</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { RoutePath } from '../../const';\r\n\r\nimport { RootState } from '../../store/store'\r\nimport { IPrivateRoute } from './types'\r\n\r\nconst PrivateRoute: React.FC<IPrivateRoute> = ({ render, path, exact }) => {\r\n    const authorizationStatus = useSelector((state: RootState) => state.auth.authorized)\r\n\r\n    return (\r\n        <Route\r\n            path={path}\r\n            exact={exact}\r\n            render={(routeProps) => {\r\n                return (\r\n                    authorizationStatus === true\r\n                        ? render(routeProps)\r\n                        : <Redirect to={RoutePath.HOME} />\r\n                )\r\n            }} />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","const MainPage: React.FC = () => {\r\n    return (\r\n        <h1>Main page is under construction at the moment</h1>\r\n    )\r\n}\r\n\r\nexport default MainPage","import React from \"react\"\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport { CssBaseline, ThemeProvider, Theme } from '@material-ui/core';\r\n\r\nimport theme from '../../style-theme';\r\nimport { RoutePath } from '../../const';\r\n\r\nimport LoginPage from \"../login-page/login-page\";\r\nimport NotFound from '../not-found/not-found';\r\nimport PrivateRoute from '../private-route/private-route';\r\nimport MainPage from '../main-page/main-page';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <CssBaseline />\r\n      <ThemeProvider<Theme> theme={theme}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path={RoutePath.HOME}>\r\n              <LoginPage />\r\n            </Route>\r\n\r\n            <PrivateRoute exact\r\n              path={RoutePath.MAIN}\r\n              render={() => {\r\n                return <MainPage />\r\n              }}>\r\n            </PrivateRoute>\r\n\r\n            <Route>\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n\r\n\r\n        </BrowserRouter>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport authReducer from '../store/slices/auth-slice/auth-slice'\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: authReducer\r\n    }\r\n})\r\n\r\nexport { store }\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './styles/styles.scss';\r\n\r\nimport App from './components/app/app'\r\nimport { store } from './store/store'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}